const t="undefined"!=typeof document;function e(t){return"object"==typeof t&&Object.prototype.hasOwnProperty.call(t,"current")}function a(t){return"string"==typeof t||Array.isArray(t)}function r(t){return"object"==typeof t&&"function"==typeof t.start}const n=["initial","animate","whileInView","whileFocus","whileHover","whileTap","whileDrag","exit"];function s(t){return r(t.animate)||n.some(e=>a(t[e]))}function o(t){return Boolean(s(t)||t.variants)}const i={animation:["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"],exit:["exit"],drag:["drag","dragControls"],focus:["whileFocus"],hover:["whileHover","onHoverStart","onHoverEnd"],tap:["whileTap","onTap","onTapStart","onTapCancel"],pan:["onPan","onPanStart","onPanSessionStart","onPanEnd"],inView:["whileInView","onViewportEnter","onViewportLeave"],layout:["layout","layoutId"]},f={};for(const t in i)f[t]={isEnabled:e=>i[t].some(t=>!!e[t])};const l=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","svg","text","tspan","use","view"];function c(t){return"string"==typeof t&&!t.includes("-")&&!!(l.indexOf(t)>-1||/[A-Z]/.test(t))}const d={},p=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],u=new Set(p);function g(t,{layout:e,layoutId:a}){return u.has(t)||t.startsWith("origin")||(e||void 0!==a)&&(!!d[t]||"opacity"===t)}const h=t=>Boolean(t&&t.getVelocity),m={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},y=p.length;const v=t=>e=>"string"==typeof e&&e.startsWith(t),w=v("--"),b=v("var(--"),x=(t,e)=>e&&"number"==typeof t?e.transform(t):t,k=(t,e,a)=>Math.min(Math.max(a,t),e),L={test:t=>"number"==typeof t,parse:parseFloat,transform:t=>t},O={...L,transform:t=>k(0,1,t)},T={...L,default:1},X=t=>Math.round(1e5*t)/1e5,Y=/(-)?([\d]*\.?[\d])+/g,$=/(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi,B=/^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;function A(t){return"string"==typeof t}const P=t=>({test:e=>A(e)&&e.endsWith(t)&&1===e.split(" ").length,parse:parseFloat,transform:e=>`${e}${t}`}),S=P("deg"),W=P("%"),Z=P("px"),R=P("vh"),C=P("vw"),H={...W,parse:t=>W.parse(t)/100,transform:t=>W.transform(100*t)},V={...L,transform:Math.round},j={borderWidth:Z,borderTopWidth:Z,borderRightWidth:Z,borderBottomWidth:Z,borderLeftWidth:Z,borderRadius:Z,radius:Z,borderTopLeftRadius:Z,borderTopRightRadius:Z,borderBottomRightRadius:Z,borderBottomLeftRadius:Z,width:Z,maxWidth:Z,height:Z,maxHeight:Z,size:Z,top:Z,right:Z,bottom:Z,left:Z,padding:Z,paddingTop:Z,paddingRight:Z,paddingBottom:Z,paddingLeft:Z,margin:Z,marginTop:Z,marginRight:Z,marginBottom:Z,marginLeft:Z,rotate:S,rotateX:S,rotateY:S,rotateZ:S,scale:T,scaleX:T,scaleY:T,scaleZ:T,skew:S,skewX:S,skewY:S,distance:Z,translateX:Z,translateY:Z,translateZ:Z,x:Z,y:Z,z:Z,perspective:Z,transformPerspective:Z,opacity:O,originX:H,originY:H,originZ:Z,zIndex:V,fillOpacity:O,strokeOpacity:O,numOctaves:V};function z(t,e,a,r){const{style:n,vars:s,transform:o,transformOrigin:i}=t;let f=!1,l=!1,c=!0;for(const t in e){const a=e[t];if(w(t)){s[t]=a;continue}const r=j[t],d=x(a,r);if(u.has(t)){if(f=!0,o[t]=d,!c)continue;a!==(r.default||0)&&(c=!1)}else t.startsWith("origin")?(l=!0,i[t]=d):n[t]=d}if(e.transform||(f||r?n.transform=function(t,{enableHardwareAcceleration:e=!0,allowTransformNone:a=!0},r,n){let s="";for(let e=0;e<y;e++){const a=p[e];if(void 0!==t[a]){s+=`${m[a]||a}(${t[a]}) `}}return e&&!t.z&&(s+="translateZ(0)"),s=s.trim(),n?s=n(t,r?"":s):a&&r&&(s="none"),s}(t.transform,a,c,r):n.transform&&(n.transform="none")),l){const{originX:t="50%",originY:e="50%",originZ:a=0}=i;n.transformOrigin=`${t} ${e} ${a}`}}function F(t,e,a){return"string"==typeof t?t:Z.transform(e+a*t)}const I={offset:"stroke-dashoffset",array:"stroke-dasharray"},D={offset:"strokeDashoffset",array:"strokeDasharray"};function E(t,{attrX:e,attrY:a,originX:r,originY:n,pathLength:s,pathSpacing:o=1,pathOffset:i=0,...f},l,c,d){if(z(t,f,l,d),c)return void(t.style.viewBox&&(t.attrs.viewBox=t.style.viewBox));t.attrs=t.style,t.style={};const{attrs:p,style:u,dimensions:g}=t;p.transform&&(g&&(u.transform=p.transform),delete p.transform),g&&(void 0!==r||void 0!==n||u.transform)&&(u.transformOrigin=function(t,e,a){return`${F(e,t.x,t.width)} ${F(a,t.y,t.height)}`}(g,void 0!==r?r:.5,void 0!==n?n:.5)),void 0!==e&&(p.x=e),void 0!==a&&(p.y=a),void 0!==s&&function(t,e,a=1,r=0,n=!0){t.pathLength=1;const s=n?I:D;t[s.offset]=Z.transform(-r);const o=Z.transform(e),i=Z.transform(a);t[s.array]=`${o} ${i}`}(p,s,o,i,!1)}const M=t=>"string"==typeof t&&"svg"===t.toLowerCase(),q=t=>t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();function N(t,{style:e,vars:a},r,n){Object.assign(t.style,e,n&&n.getProjectionStyles(r));for(const e in a)t.style.setProperty(e,a[e])}const U=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength","startOffset","textLength","lengthAdjust"]);function G(t,e,a,r){N(t,e,void 0,r);for(const a in e.attrs)t.setAttribute(U.has(a)?a:q(a),e.attrs[a])}function J(t,e){const{style:a}=t,r={};for(const n in a)(h(a[n])||e.style&&h(e.style[n])||g(n,t))&&(r[n]=a[n]);return r}function K(t,e){const a=J(t,e);for(const r in t)if(h(t[r])||h(e[r])){a["x"===r||"y"===r?"attr"+r.toUpperCase():r]=t[r]}return a}function Q(t,e,a,r={},n={}){return"function"==typeof e&&(e=e(void 0!==a?a:t.custom,r,n)),"string"==typeof e&&(e=t.variants&&t.variants[e]),"function"==typeof e&&(e=e(void 0!==a?a:t.custom,r,n)),e}const _=t=>Array.isArray(t),tt=t=>Boolean(t&&"object"==typeof t&&t.mix&&t.toValue),et=t=>_(t)?t[t.length-1]||0:t;export{$ as A,j as B,Z as C,S as D,C as E,R as F,et as G,q as H,u as I,_ as J,b as K,p as L,n as M,w as N,N as O,U as P,e as a,s as b,a as c,h as d,g as e,f,z as g,E as h,t as i,M as j,c as k,tt as l,o as m,r as n,G as o,J as p,A as q,Q as r,K as s,B as t,Y as u,X as v,O as w,L as x,k as y,W as z};
